<!DOCTYPE html>
<html lang="en">
<head>
  <style>
    .transition{
      transition: all .4s !important;
      -moz-transition: all .4s !important;
      -webkit-transition:all .4s !important;
      -o-transition: all .4s !important;
      position:relative !important; 
    }
    small:hover {
      color: rgb(82, 80, 70) !important;
    }
    .custom-btn {
      background-color: #CFB87C;
      color: #fff;
    }
    .custom-btn:hover {
      background-color: #fff9d7;
      color: #363636;
    }
    .custom-title {
      color: transparent; !important;
      background: linear-gradient(50deg, #ffffff,  50%, #CFB87C); !important;
      -webkit-background-clip: text; !important;
      padding-bottom: 2px; !important;
    }

    .grid-container {
        display: grid;
        grid-template-columns: repeat(5, 1fr); /* 5 columns */
        gap: 16px;
        padding: 20px;
    }
    .listing-item {
        background-color: #ddd;
        text-decoration: none;
        border: 2px solid #CFB87C;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
        padding: 10px;
        transition: transform 0.1s ease;
    }
    .listing-item:hover {
        transform: scale(1.02);
    }
    .listing-image {
        width: 100%;
        height: 200px; /* Sets fixed height */
        object-fit: cover; 
    }
    .listing-title {
        font-size: 0.9em;
        font-weight: 500;
        color: #000000;
        text-decoration: none;
        margin-top: 2px;
        margin-bottom: 5px;
    }
    .listing-title:hover {
        text-decoration: underline;
    }
    .listing-price {
        font-size: 1em;
        font-weight: 700;
        color: #333;
        margin-top: 6px;
        margin-bottom: 3px;
    }
    .listing-date {
        font-size: 0.7em;
        color: #333;
        margin-top: 1px;
        margin-bottom: 4px;
    }
  </style>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Messages</title>
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body data-bs-theme="dark">
  <!-- Header -->
  <header class="py-3 mb-4 text-center" style="background-color: color: #363636;">
    <div class="container">
      <h1 class=" custom-title">Messages</h1>
    </div>
  </header>

  <main class="container">
  <div class="row">
    <!-- User List -->
    <div class="col-md-4">
      <h2 class="custom-title">Chats</h2>
      <ul id="userList" class="list-group">
        <!-- Users will be dynamically populated here -->
      </ul>
    </div>

    <!-- Chat Area -->
    <div class="col-md-8">
      <h2 class="custom-title" id="chatHeader">Texts</h2>
      <div id="chatMessages" class="border rounded p-3 mb-3 bg-dark text-white" style="height: 400px; overflow-y: scroll;">
        <!-- Messages will be dynamically populated here -->
      </div>
      <form action="/chat" id="sendMessageForm" class="row g-3">
        <input type="hidden" id="selectedUserId">
        <div class="col-12">
          <textarea id="messageInput" class="form-control" rows="2" placeholder="Type a message"></textarea>
        </div>
        <div class="col-12">
          <button type="submit" class="btn btn-primary">Send</button>
        </div>
      </form>
    </div>
  </div>
</main>

<script>
  async function loadUsers() {
    const response = await fetch('/users'); // Fetch list of users
    const users = await response.json();
    const userList = document.getElementById('userList');
    userList.innerHTML = '';

    users.forEach(user => {
      const listItem = document.createElement('li');
      listItem.className = 'list-group-item bg-dark text-white';
      listItem.textContent = user.nickname;
      listItem.dataset.userId = user.id;
      listItem.onclick = () => selectUser(user.id, user.nickname);
      userList.appendChild(listItem);
    });
  }

  async function selectUser(userId, nickname) {
    document.getElementById('chatHeader').textContent = `Chat with ${nickname}`;
    document.getElementById('selectedUserId').value = userId;

    const response = await fetch(`/messages?receiverID=${userId}`);
    const messages = await response.json();
    const chatMessages = document.getElementById('chatMessages');
    chatMessages.innerHTML = '';

    messages.forEach(msg => {
      const msgElement = document.createElement('div');
      msgElement.textContent = `[${msg.timestamp}] ${msg.sendernickname}: ${msg.content}`;
      chatMessages.appendChild(msgElement);
    });
  }

  document.getElementById('sendMessageForm').onsubmit = async (event) => {
    event.preventDefault();
    const userId = document.getElementById('selectedUserId').value;
    const content = document.getElementById('messageInput').value;

    await fetch('/chat', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ receiverID: userId, content }),
    });

    document.getElementById('messageInput').value = '';
    selectUser(userId, document.getElementById('chatHeader').textContent.replace('Chat with ', ''));
  };

  document.addEventListener('DOMContentLoaded', loadUsers);
  async function loadUsers() {
  const response = await fetch('/users');
  const users = await response.json();
  const userList = document.getElementById('userList');
  userList.innerHTML = '';

  if (users.length === 0) {
    userList.innerHTML = `<li class="list-group-item bg-dark text-white">
      No chats yet! Start a new chat with someone to begin.
    </li>`;
  } else {
    users.forEach(user => {
      const listItem = document.createElement('li');
      listItem.className = 'list-group-item bg-dark text-white';
      listItem.textContent = user.nickname;
      listItem.dataset.userId = user.id;
      listItem.onclick = () => selectUser(user.id, user.nickname);
      userList.appendChild(listItem);
    });
  }
}
function selectUser(userId, nickname) {
  document.getElementById('chatHeader').textContent = `Chat with ${nickname}`;
  document.getElementById('selectedUserId').value = userId;

  fetch(`/messages?receiverID=${userId}`)
    .then(response => response.json())
    .then(messages => {
      const chatMessages = document.getElementById('chatMessages');
      chatMessages.innerHTML = '';

      if (messages.length === 0) {
        chatMessages.innerHTML = `<p class="text-white">No messages yet! Say hello to start chatting.</p>`;
      } else {
        messages.forEach(msg => {
          const msgElement = document.createElement('div');
          msgElement.textContent = `[${msg.timestamp}] ${msg.sendernickname}: ${msg.content}`;
          chatMessages.appendChild(msgElement);
        });
      }
    })
    .catch(err => console.error('Error fetching messages:', err));
}

</script>
</body>
</html>
